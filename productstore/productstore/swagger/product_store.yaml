openapi: 3.0.3
info:
  title: Product Store
  description: |-
    marketplace oneline that allows people to self-publish their products and sell them
  version: 1.0.
externalDocs:
  description: Requirements
  url: https://github.com/xwang-solocal/kata-backend-java
servers:
  - url: http://localhost:8080/
tags:
  - name: product
    description: Operations about product
  - name: user
    description: Operations about user
paths:
  /products/all:
    get:
      tags:
        - product
      summary: Get the all products (list/detail in json)
      description: |- 
        - Get the all products.
        - No authentication required.
      operationId: all
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/add:
    post:
      tags:
        - product
      summary: add new product
      description: |- 
        - Add new product.
        - Authentication required.
      operationId: add
      requestBody:
        description: new product object
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                description:
                  type: string
                productImageUrl:
                  type: string
                owner:
                  $ref: '#/components/schemas/User'
                price:
                  type: number
                  example: 1200.6
                public:
                  type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - productstore_auth: []
  /products/update:
    post:
      tags:
        - product
      summary: update a product
      description: |- 
        - Update a product.
        - Authentication required.
      operationId: update
      requestBody:
        description: product object
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                description:
                  type: string
                productImageUrl:
                  type: string
                owner:
                  $ref: '#/components/schemas/User'
                price:
                  type: number
                  example: 1500
                public:
                  type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: product not found
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - productstore_auth: []
  /products/publish/{id}:
    post:
      tags:
        - product
      summary: publish a product
      description: |- 
        - Publish a product.
        - Authentication required.
      operationId: publish
      parameters:
        - name: id
          in: path
          description: product id
          required: true
          schema:
            type: string
            example: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: product not found
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - productstore_auth: []
  
  /products/unpublish/{id}:
    post:
      tags:
        - product
      summary: unpublish a product
      description: |- 
        - UnPublish a product.
        - Authentication required.
      operationId: unpublish
      parameters:
        - name: id
          in: path
          description: product id
          required: true
          schema:
            type: string
            example: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: product not found
      security:
        - productstore_auth: []
  
  /register:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: new user object
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
                pseudonym:
                  type: string
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /authenticate:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: authenticate
      requestBody:
        description: login user information
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  jwtToken:
                    type: string
                    example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjaHVuZyIsImV4cCI6MTY2Njc3OTgxNywiaWF0IjoxNjY2NzYxODE3fQ.uzfkRhvg-LATJ9YfjuE-EnZTCMmXp6ePZ2DWOMU4yu6kLMn_NGW6iZPbqrpJrZkkgBA1kaI3caA2POePQxEk3g
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          example: 10
        username:
          type: string
          example: theUser
        password:
          type: string
          example: '12345'
        pseudonym:
          type: string
          description: user's pseudonym
          example: 'Dr. Seuss'
      xml:
        name: user
    Product:
      type: object
      properties:
        id:
          type: number
          example: 10
        title:
          type: string
          description: Product title
          example: title
        description:
          type: string
          description: Product description
          example: description
        owner:
          $ref: '#/components/schemas/User'
        productImageUrl:
          type: string
          description: Product image url
          example: 'http://image.com'
        price:
          type: number
          description: Product price
        isPublish:
          type: boolean
          description: Product publish or not
      xml:
        name: product
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
        application/xml:
          schema:
            $ref: '#/components/schemas/Product'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    productstore_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT